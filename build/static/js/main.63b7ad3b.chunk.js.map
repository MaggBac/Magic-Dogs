{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","props","className","flipped","src","card","alt","onClick","disabled","handleChoice","App","useState","cards","setCards","turns","setTurns","choiceOne","setchoiceOne","choiceTwo","setchoiceTwo","setDisabled","cardImg","setCardImg","randomImg","random__idx","Math","floor","random","length","console","log","useEffect","fetch","then","responseJson","json","data","message","cardImages","r","indexOf","push","matched","shuffleCards","sort","map","id","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAyBeA,EAtBI,SAACC,GAOnB,OACC,qBAAKC,UAAU,OAAf,SACC,sBAAKA,UAAWD,EAAME,QAAU,UAAY,GAA5C,UACC,qBAAKD,UAAU,QAAQE,IAAKH,EAAMI,KAAKD,IAAKE,IAAI,eAChD,qBACCJ,UAAU,OACVE,IAAI,cACJG,QAbgB,WACdN,EAAMO,UACVP,EAAMQ,aAAaR,EAAMI,OAYvBC,IAAI,oBCuFMI,MArGf,WACC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOH,EAAP,KAAiBY,EAAjB,KAEA,EAA8BT,mBAAS,IAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAWA,SAASC,IACR,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWN,EAAQO,QAIrD,OAHAC,QAAQC,IAAIN,GAEQH,EAAQG,GAZ7BO,qBAAU,WAGTC,MAFY,0CAGVC,MAAK,SAACC,GAAD,OAAkBA,EAAaC,UACpCF,MAAK,SAACG,GAAD,OAAUd,EAAWc,EAAKC,cAC/B,IAWH,IADA,IAAIC,EAAa,GACVA,EAAWV,OAAS,GAAG,CAC7B,IAAIW,EAAId,KAAKC,MAAMD,KAAKE,SAAWN,EAAQO,SACZ,IAA3BU,EAAWE,QAAQD,IACtBD,EAAWG,KAAK,CAAErC,IAAKmB,IAAamB,SAAS,IAE/Cb,QAAQC,IAAIQ,GAEZ,IAAMK,EAAe,WACpB,IAAMA,EAAe,UAAIL,EAAeA,GACtCM,MAAK,kBAAMnB,KAAKE,YAChBkB,KAAI,SAACxC,GAAD,mBAAC,eAAeA,GAAhB,IAAsByC,GAAIrB,KAAKE,cACrCV,EAAa,MACbE,EAAa,MACbN,EAAS8B,GACT5B,EAAS,IAGJN,EAAe,SAACJ,GACrBW,EAAYG,EAAad,GAAQY,EAAaZ,IAG/C0B,qBAAU,WACLf,GAAaE,IAChBE,GAAY,GACRJ,EAAUZ,MAAQc,EAAUd,KAC/BS,GAAS,SAACkC,GACT,OAAOA,EAAUF,KAAI,SAACxC,GACrB,OAAIA,EAAKD,MAAQY,EAAUZ,IACnB,2BAAKC,GAAZ,IAAkBqC,SAAS,IAEpBrC,QAIV2C,KAEAC,YAAW,kBAAMD,MAAa,QAG9B,CAAChC,EAAWE,IAEfW,QAAQC,IAAIlB,GAEZ,IAAMoC,EAAY,WACjB/B,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACmC,GAAD,OAAeA,EAAY,KACpC9B,GAAY,IAOb,OAJAW,qBAAU,WACTY,MACE,IAGF,sBAAKzC,UAAU,MAAf,UACC,4CACA,wBAAQK,QAASoC,EAAjB,sBACA,qBAAKzC,UAAU,YAAf,SACEU,EAAMiC,KAAI,SAACxC,GAAD,OACV,cAAC,EAAD,CAECA,KAAMA,EACNI,aAAcA,EACdN,QAASE,IAASW,GAAaX,IAASa,GAAab,EAAKqC,QAC1DlC,SAAUA,GAJLH,EAAKyC,SAQb,wCAAWhC,SC/FdqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63b7ad3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SingleCard.css';\r\n\r\nconst SingleCard = (props) => {\r\n\tconst handleClick = () => {\r\n\t\tif (!props.disabled) {\r\n\t\t\tprops.handleChoice(props.card);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<div className={props.flipped ? 'flipped' : ''}>\r\n\t\t\t\t<img className='front' src={props.card.src} alt='card front' />\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName='back'\r\n\t\t\t\t\tsrc='img/dog.png'\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\talt='card back'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SingleCard;\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport SingleCard from './components/SingleCard';\n\nfunction App() {\n\tconst [cards, setCards] = useState([]);\n\tconst [turns, setTurns] = useState(0);\n\tconst [choiceOne, setchoiceOne] = useState(null);\n\tconst [choiceTwo, setchoiceTwo] = useState(null);\n\tconst [disabled, setDisabled] = useState(false);\n\n\tconst [cardImg, setCardImg] = useState([]);\n\t//api\n\n\tuseEffect(() => {\n\t\tconst url = 'https://dog.ceo/api/breed/hound/images';\n\n\t\tfetch(url)\n\t\t\t.then((responseJson) => responseJson.json())\n\t\t\t.then((data) => setCardImg(data.message));\n\t}, []);\n\n\tfunction randomImg() {\n\t\tlet random__idx = Math.floor(Math.random() * cardImg.length);\n\t\tconsole.log(random__idx);\n\n\t\tlet selected__img = cardImg[random__idx];\n\t\treturn selected__img;\n\t}\n\n\tlet cardImages = [];\n\twhile (cardImages.length < 6) {\n\t\tlet r = Math.floor(Math.random() * cardImg.length);\n\t\tif (cardImages.indexOf(r) === -1)\n\t\t\tcardImages.push({ src: randomImg(), matched: false });\n\t}\n\tconsole.log(cardImages);\n\n\tconst shuffleCards = () => {\n\t\tconst shuffleCards = [...cardImages, ...cardImages]\n\t\t\t.sort(() => Math.random())\n\t\t\t.map((card) => ({ ...card, id: Math.random() }));\n\t\tsetchoiceOne(null);\n\t\tsetchoiceTwo(null);\n\t\tsetCards(shuffleCards);\n\t\tsetTurns(0);\n\t};\n\n\tconst handleChoice = (card) => {\n\t\tchoiceOne ? setchoiceTwo(card) : setchoiceOne(card);\n\t};\n\n\tuseEffect(() => {\n\t\tif (choiceOne && choiceTwo) {\n\t\t\tsetDisabled(true);\n\t\t\tif (choiceOne.src === choiceTwo.src) {\n\t\t\t\tsetCards((prevCards) => {\n\t\t\t\t\treturn prevCards.map((card) => {\n\t\t\t\t\t\tif (card.src === choiceOne.src) {\n\t\t\t\t\t\t\treturn { ...card, matched: true };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn card;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tresetTurn();\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => resetTurn(), 1000);\n\t\t\t}\n\t\t}\n\t}, [choiceOne, choiceTwo]);\n\n\tconsole.log(cards);\n\n\tconst resetTurn = () => {\n\t\tsetchoiceOne(null);\n\t\tsetchoiceTwo(null);\n\t\tsetTurns((prevTurns) => prevTurns + 1);\n\t\tsetDisabled(false);\n\t};\n\n\tuseEffect(() => {\n\t\tshuffleCards();\n\t}, []);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1>Magic Dogs</h1>\n\t\t\t<button onClick={shuffleCards}>New Game</button>\n\t\t\t<div className='card-grid'>\n\t\t\t\t{cards.map((card) => (\n\t\t\t\t\t<SingleCard\n\t\t\t\t\t\tkey={card.id}\n\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\thandleChoice={handleChoice}\n\t\t\t\t\t\tflipped={card === choiceOne || card === choiceTwo || card.matched}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<p>Turns: {turns}</p>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}